{
    "sourceFile": "lib/Screens/login_screen.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 15,
            "patches": [
                {
                    "date": 1693736545547,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1693736555986,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,13 +33,37 @@\n               email: emailOrUserNameController.text,\r\n               password: passController.text,\r\n               passwordConfirmation: confirmPassController.text)\r\n           .then((response) async {\r\n-        // if (response[0] == 200) {\r\n-        SharedPrefsController _prefs = SharedPrefsController();\r\n-        await _prefs.setData('user', userToJson(User.fromJson(response[1])));\r\n+        showAlert(context,\r\n+            message: \"Account Created Successfully,\\n Please Log In\",\r\n+            color: Colors.grey,\r\n+            width: 300);\r\n         Navigator.pushReplacement(context, MaterialPageRoute(\r\n           builder: (context) {\r\n+            return LoginScreen();\r\n+          },\r\n+        ));\r\n+      }).catchError((err) async {\r\n+        final errorMessagae =\r\n+            json.decode(err.message)['errors']['email'][0].toString();\r\n+        showAlert(context,\r\n+            message: errorMessagae, color: Colors.redAccent, width: 300);\r\n+      });\r\n+    }\r\n+  }\r\n+\r\n+  void submitLogin() {\r\n+    if (_formKey.currentState!.validate()) {\r\n+      AuthController.login(\r\n+        context,\r\n+        email: emailOrUserNameController.text,\r\n+        password: passController.text,\r\n+      ).then((response) async {\r\n+        SharedPrefsController prefs = SharedPrefsController();\r\n+        await prefs.setData('user', userToJson(User.fromJson(response[1])));\r\n+        Navigator.pushReplacement(context, MaterialPageRoute(\r\n+          builder: (context) {\r\n             return HomeScreen();\r\n           },\r\n         ));\r\n       }).catchError((err) async {\r\n"
                },
                {
                    "date": 1693736568450,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,9 +62,9 @@\n         SharedPrefsController prefs = SharedPrefsController();\r\n         await prefs.setData('user', userToJson(User.fromJson(response[1])));\r\n         Navigator.pushReplacement(context, MaterialPageRoute(\r\n           builder: (context) {\r\n-            return HomeScreen();\r\n+            return const MainPage();\r\n           },\r\n         ));\r\n       }).catchError((err) async {\r\n         final errorMessagae = json.decode(err.message)['message'].toString();\r\n"
                },
                {
                    "date": 1693736615876,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,378 @@\n+import 'dart:convert';\r\n+\r\n+import 'package:final_projectt/Screens/main_screen.dart';\r\n+import 'package:final_projectt/core/helpers/shared_prefs.dart';\r\n+import 'package:final_projectt/core/services/auth_controller.dart';\r\n+import 'package:final_projectt/core/util/constants/colors.dart';\r\n+import 'package:final_projectt/core/widgets/show_alert.dart';\r\n+import 'package:final_projectt/models/user_model.dart';\r\n+import 'package:flutter/material.dart';\r\n+import 'package:icons_plus/icons_plus.dart';\r\n+import 'package:toggle_switch/toggle_switch.dart';\r\n+\r\n+class LoginScreen extends StatefulWidget {\r\n+  const LoginScreen({super.key});\r\n+\r\n+  @override\r\n+  State<LoginScreen> createState() => _LoginScreenState();\r\n+}\r\n+\r\n+class _LoginScreenState extends State<LoginScreen> {\r\n+  bool isToggled = false;\r\n+  int initialLabelIndex = 0;\r\n+  final _formKey = GlobalKey<FormState>();\r\n+  TextEditingController nameController = TextEditingController();\r\n+  TextEditingController emailOrUserNameController = TextEditingController();\r\n+  TextEditingController passController = TextEditingController();\r\n+  TextEditingController confirmPassController = TextEditingController();\r\n+\r\n+  void submitRegister() {\r\n+    if (_formKey.currentState!.validate()) {\r\n+      AuthController.register(context,\r\n+              name: nameController.text,\r\n+              email: emailOrUserNameController.text,\r\n+              password: passController.text,\r\n+              passwordConfirmation: confirmPassController.text)\r\n+          .then((response) async {\r\n+        showAlert(context,\r\n+            message: \"Account Created Successfully,\\n Please Log In\",\r\n+            color: Colors.grey,\r\n+            width: 300);\r\n+        Navigator.pushReplacement(context, MaterialPageRoute(\r\n+          builder: (context) {\r\n+            return LoginScreen();\r\n+          },\r\n+        ));\r\n+      }).catchError((err) async {\r\n+        final errorMessagae =\r\n+            json.decode(err.message)['errors']['email'][0].toString();\r\n+        showAlert(context,\r\n+            message: errorMessagae, color: Colors.redAccent, width: 300);\r\n+      });\r\n+    }\r\n+  }\r\n+\r\n+  void submitLogin() {\r\n+    if (_formKey.currentState!.validate()) {\r\n+      AuthController.login(\r\n+        context,\r\n+        email: emailOrUserNameController.text,\r\n+        password: passController.text,\r\n+      ).then((response) async {\r\n+        SharedPrefsController prefs = SharedPrefsController();\r\n+        await prefs.setData('user', userToJson(User.fromJson(response[1])));\r\n+        Navigator.pushReplacement(context, MaterialPageRoute(\r\n+          builder: (context) {\r\n+            return const MainPage();\r\n+          },\r\n+        ));\r\n+      }).catchError((err) async {\r\n+        final errorMessagae = json.decode(err.message)['message'].toString();\r\n+        showAlert(context,\r\n+            message: errorMessagae, color: Colors.redAccent, width: 300);\r\n+      });\r\n+    }\r\n+  }\r\n+\r\n+  @override\r\n+  Widget build(BuildContext context) {\r\n+    return Scaffold(\r\n+        backgroundColor: const Color.fromARGB(255, 234, 229, 229),\r\n+        body: GestureDetector(\r\n+          onTap: () {\r\n+            FocusScope.of(context).unfocus();\r\n+          },\r\n+          child: Stack(\r\n+            alignment: Alignment.topCenter,\r\n+            children: [\r\n+              Container(\r\n+                clipBehavior: Clip.antiAliasWithSaveLayer,\r\n+                width: 400,\r\n+                height: 400,\r\n+                decoration: BoxDecoration(\r\n+                  color: Colors.white,\r\n+                  borderRadius: BorderRadius.only(\r\n+                      bottomLeft: Radius.circular(110),\r\n+                      bottomRight: Radius.circular(200)),\r\n+                ),\r\n+                child: Image.asset(\r\n+                  'images/splash.jpg',\r\n+                  fit: BoxFit.cover,\r\n+                ),\r\n+              ),\r\n+              Container(\r\n+                margin: EdgeInsets.only(top: 220),\r\n+                width: 350,\r\n+                height: 570,\r\n+                decoration: BoxDecoration(\r\n+                    color: Colors.white,\r\n+                    borderRadius: BorderRadius.circular(80)),\r\n+                child: Padding(\r\n+                  padding: EdgeInsetsDirectional.only(\r\n+                    top: 60.0,\r\n+                    end: 60.0,\r\n+                    start: 60.0,\r\n+                  ),\r\n+                  child: Column(\r\n+                    children: [\r\n+                      ToggleSwitch(\r\n+                        fontSize: 16,\r\n+                        minWidth: 100.0,\r\n+                        cornerRadius: 20.0,\r\n+                        activeBgColors: [\r\n+                          [Colors.blue[800]!],\r\n+                          [Colors.blue[800]!]\r\n+                        ],\r\n+                        activeFgColor: Colors.white,\r\n+                        inactiveBgColor:\r\n+                            const Color.fromARGB(255, 234, 232, 232),\r\n+                        inactiveFgColor: Colors.blue[800]!,\r\n+                        initialLabelIndex: initialLabelIndex,\r\n+                        totalSwitches: 2,\r\n+                        labels: const ['Log In', 'Sign Up'],\r\n+                        radiusStyle: true,\r\n+                        onToggle: (index) {\r\n+                          setState(() {\r\n+                            isToggled = !isToggled;\r\n+                            print(isToggled);\r\n+                            initialLabelIndex = index!;\r\n+                          });\r\n+                        },\r\n+                      ),\r\n+                      SizedBox(height: 30),\r\n+                      Form(\r\n+                        key: _formKey,\r\n+                        child: Column(\r\n+                          children: [\r\n+                            TextFormField(\r\n+                              controller: nameController,\r\n+                              validator: (value) {\r\n+                                if (value == null || value.isEmpty) {\r\n+                                  return 'Please enter your name';\r\n+                                }\r\n+                                return null;\r\n+                              },\r\n+                              decoration: InputDecoration(\r\n+                                  hintText: 'Enter your name',\r\n+                                  hintStyle: TextStyle(\r\n+                                      color: Colors.grey,\r\n+                                      fontFamily: 'Iphone',\r\n+                                      fontSize: 14),\r\n+                                  fillColor: Colors.grey,\r\n+                                  enabledBorder: UnderlineInputBorder(\r\n+                                      borderSide:\r\n+                                          BorderSide(color: Colors.grey)),\r\n+                                  focusedBorder: UnderlineInputBorder(\r\n+                                      borderSide:\r\n+                                          BorderSide(color: Colors.grey))),\r\n+                            ),\r\n+                            TextFormField(\r\n+                              controller: emailOrUserNameController,\r\n+                              validator: (value) {\r\n+                                if (value == null || value.isEmpty) {\r\n+                                  return 'Please enter email or username';\r\n+                                }\r\n+                                return null;\r\n+                              },\r\n+                              decoration: InputDecoration(\r\n+                                  hintText: 'Enter email or username',\r\n+                                  hintStyle: TextStyle(\r\n+                                      color: Colors.grey,\r\n+                                      fontFamily: 'Iphone',\r\n+                                      fontSize: 14),\r\n+                                  fillColor: Colors.grey,\r\n+                                  enabledBorder: UnderlineInputBorder(\r\n+                                      borderSide:\r\n+                                          BorderSide(color: Colors.grey)),\r\n+                                  focusedBorder: UnderlineInputBorder(\r\n+                                      borderSide:\r\n+                                          BorderSide(color: Colors.grey))),\r\n+                            ),\r\n+                            SizedBox(\r\n+                              height: 15,\r\n+                            ),\r\n+                            TextFormField(\r\n+                              controller: passController,\r\n+                              obscureText: true,\r\n+                              validator: (value) {\r\n+                                if (value == null || value.isEmpty) {\r\n+                                  return ' Please enter a password  ';\r\n+                                }\r\n+                                return null;\r\n+                              },\r\n+                              decoration: InputDecoration(\r\n+                                  hintText: 'Password',\r\n+                                  hintStyle: TextStyle(\r\n+                                      color: Colors.grey,\r\n+                                      fontFamily: 'Iphone',\r\n+                                      fontSize: 14),\r\n+                                  fillColor: Colors.grey,\r\n+                                  enabledBorder: UnderlineInputBorder(\r\n+                                      borderSide:\r\n+                                          BorderSide(color: Colors.grey)),\r\n+                                  focusedBorder: UnderlineInputBorder(\r\n+                                      borderSide:\r\n+                                          BorderSide(color: Colors.grey))),\r\n+                            ),\r\n+                            SizedBox(\r\n+                              height: 15,\r\n+                            ),\r\n+                            if (isToggled)\r\n+                              Column(\r\n+                                children: [\r\n+                                  TextFormField(\r\n+                                    controller: confirmPassController,\r\n+                                    obscureText: true,\r\n+                                    validator: (value) {\r\n+                                      if (value == null || value.isEmpty) {\r\n+                                        return 'Please confirm your password';\r\n+                                      } else if (value != passController.text) {\r\n+                                        return 'Passwords do not match';\r\n+                                      }\r\n+                                      return null;\r\n+                                    },\r\n+                                    decoration: InputDecoration(\r\n+                                        hintText: 'Confirm Password',\r\n+                                        hintStyle: TextStyle(\r\n+                                            color: Colors.grey,\r\n+                                            fontFamily: 'Iphone',\r\n+                                            fontSize: 14),\r\n+                                        fillColor: Colors.grey,\r\n+                                        enabledBorder: UnderlineInputBorder(\r\n+                                            borderSide:\r\n+                                                BorderSide(color: Colors.grey)),\r\n+                                        focusedBorder: UnderlineInputBorder(\r\n+                                            borderSide: BorderSide(\r\n+                                                color: Colors.grey))),\r\n+                                  ),\r\n+                                  SizedBox(\r\n+                                    height: 25,\r\n+                                  ),\r\n+                                ],\r\n+                              ),\r\n+                            TextButton(\r\n+                              onPressed: () {\r\n+                                if (isToggled) {\r\n+                                  if (_formKey.currentState!.validate()) {\r\n+                                    submitRegister();\r\n+                                  }\r\n+                                } else {\r\n+                                  if (Form.of(context).validate()) {\r\n+                                    Navigator.push(\r\n+                                      context,\r\n+                                      MaterialPageRoute(\r\n+                                          builder: (context) =>\r\n+                                              const M()),\r\n+                                    );\r\n+                                  }\r\n+                                }\r\n+                              },\r\n+                              style: ElevatedButton.styleFrom(\r\n+                                shape: RoundedRectangleBorder(\r\n+                                  borderRadius: BorderRadius.circular(20.0),\r\n+                                ),\r\n+                              ),\r\n+                              child: Container(\r\n+                                width: double.infinity,\r\n+                                decoration: BoxDecoration(\r\n+                                  color: primaryColor,\r\n+                                  borderRadius: BorderRadius.circular(20.0),\r\n+                                ),\r\n+                                padding: EdgeInsets.symmetric(\r\n+                                    vertical: 16.0, horizontal: 32.0),\r\n+                                child: Text(\r\n+                                  isToggled ? 'Sign Up' : 'Log In',\r\n+                                  textAlign: TextAlign.center,\r\n+                                  style: TextStyle(\r\n+                                    color: Colors.white,\r\n+                                    fontSize: 16,\r\n+                                  ),\r\n+                                ),\r\n+                              ),\r\n+                            ),\r\n+                            SizedBox(\r\n+                              height: 14,\r\n+                            ),\r\n+                            Text(\r\n+                              'OR',\r\n+                              textAlign: TextAlign.center,\r\n+                              style: TextStyle(\r\n+                                color: Colors.grey,\r\n+                                fontSize: 14,\r\n+                              ),\r\n+                            ),\r\n+                            SizedBox(height: 16),\r\n+                            Row(\r\n+                              mainAxisAlignment: MainAxisAlignment.spaceEvenly,\r\n+                              children: [\r\n+                                InkWell(\r\n+                                  onTap: () {},\r\n+                                  child: Container(\r\n+                                    padding: EdgeInsetsDirectional.symmetric(\r\n+                                      horizontal: 8,\r\n+                                      vertical: 8,\r\n+                                    ),\r\n+                                    decoration: BoxDecoration(\r\n+                                      borderRadius: BorderRadius.circular(20),\r\n+                                      border: Border.all(\r\n+                                          color: const Color.fromARGB(\r\n+                                              255, 210, 208, 208)),\r\n+                                    ),\r\n+                                    child: Logo(\r\n+                                      Logos.facebook_f,\r\n+                                      size: 24,\r\n+                                    ),\r\n+                                  ),\r\n+                                ),\r\n+                                InkWell(\r\n+                                  onTap: () {},\r\n+                                  child: Container(\r\n+                                    padding: EdgeInsets.symmetric(\r\n+                                      horizontal: 8,\r\n+                                      vertical: 8,\r\n+                                    ),\r\n+                                    decoration: BoxDecoration(\r\n+                                      borderRadius: BorderRadius.circular(20),\r\n+                                      border: Border.all(\r\n+                                          color: const Color.fromARGB(\r\n+                                              255, 210, 208, 208)),\r\n+                                    ),\r\n+                                    child: Logo(\r\n+                                      Logos.twitter,\r\n+                                      size: 24,\r\n+                                    ),\r\n+                                  ),\r\n+                                ),\r\n+                                InkWell(\r\n+                                  onTap: () {},\r\n+                                  child: Container(\r\n+                                    padding: EdgeInsets.symmetric(\r\n+                                      horizontal: 8,\r\n+                                      vertical: 8,\r\n+                                    ),\r\n+                                    decoration: BoxDecoration(\r\n+                                      borderRadius: BorderRadius.circular(20),\r\n+                                      border: Border.all(\r\n+                                          color: const Color.fromARGB(\r\n+                                              255, 210, 208, 208)),\r\n+                                    ),\r\n+                                    child: Logo(\r\n+                                      Logos.google,\r\n+                                      size: 24,\r\n+                                    ),\r\n+                                  ),\r\n+                                ),\r\n+                              ],\r\n+                            ),\r\n+                          ],\r\n+                        ),\r\n+                      ),\r\n+                    ],\r\n+                  ),\r\n+                ),\r\n+              )\r\n+            ],\r\n+          ),\r\n+        ));\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1693736855594,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,9 +62,9 @@\n         SharedPrefsController prefs = SharedPrefsController();\r\n         await prefs.setData('user', userToJson(User.fromJson(response[1])));\r\n         Navigator.pushReplacement(context, MaterialPageRoute(\r\n           builder: (context) {\r\n-            return const MainPage();\r\n+            return const MainScreen();\r\n           },\r\n         ));\r\n       }).catchError((err) async {\r\n         final errorMessagae = json.decode(err.message)['message'].toString();\r\n@@ -261,9 +261,9 @@\n                                     Navigator.push(\r\n                                       context,\r\n                                       MaterialPageRoute(\r\n                                           builder: (context) =>\r\n-                                              const M()),\r\n+                                              const MainPage()),\r\n                                     );\r\n                                   }\r\n                                 }\r\n                               },\r\n@@ -375,382 +375,4 @@\n           ),\r\n         ));\r\n   }\r\n }\r\n-import 'dart:convert';\r\n-\r\n-import 'package:final_projectt/Screens/main_screen.dart';\r\n-import 'package:final_projectt/core/helpers/shared_prefs.dart';\r\n-import 'package:final_projectt/core/services/auth_controller.dart';\r\n-import 'package:final_projectt/core/util/constants/colors.dart';\r\n-import 'package:final_projectt/core/widgets/show_alert.dart';\r\n-import 'package:final_projectt/models/user_model.dart';\r\n-import 'package:flutter/material.dart';\r\n-import 'package:icons_plus/icons_plus.dart';\r\n-import 'package:toggle_switch/toggle_switch.dart';\r\n-\r\n-class LoginScreen extends StatefulWidget {\r\n-  const LoginScreen({super.key});\r\n-\r\n-  @override\r\n-  State<LoginScreen> createState() => _LoginScreenState();\r\n-}\r\n-\r\n-class _LoginScreenState extends State<LoginScreen> {\r\n-  bool isToggled = false;\r\n-  int initialLabelIndex = 0;\r\n-  final _formKey = GlobalKey<FormState>();\r\n-  TextEditingController nameController = TextEditingController();\r\n-  TextEditingController emailOrUserNameController = TextEditingController();\r\n-  TextEditingController passController = TextEditingController();\r\n-  TextEditingController confirmPassController = TextEditingController();\r\n-\r\n-  void submitRegister() {\r\n-    if (_formKey.currentState!.validate()) {\r\n-      AuthController.register(context,\r\n-              name: nameController.text,\r\n-              email: emailOrUserNameController.text,\r\n-              password: passController.text,\r\n-              passwordConfirmation: confirmPassController.text)\r\n-          .then((response) async {\r\n-        showAlert(context,\r\n-            message: \"Account Created Successfully,\\n Please Log In\",\r\n-            color: Colors.grey,\r\n-            width: 300);\r\n-        Navigator.pushReplacement(context, MaterialPageRoute(\r\n-          builder: (context) {\r\n-            return LoginScreen();\r\n-          },\r\n-        ));\r\n-      }).catchError((err) async {\r\n-        final errorMessagae =\r\n-            json.decode(err.message)['errors']['email'][0].toString();\r\n-        showAlert(context,\r\n-            message: errorMessagae, color: Colors.redAccent, width: 300);\r\n-      });\r\n-    }\r\n-  }\r\n-\r\n-  void submitLogin() {\r\n-    if (_formKey.currentState!.validate()) {\r\n-      AuthController.login(\r\n-        context,\r\n-        email: emailOrUserNameController.text,\r\n-        password: passController.text,\r\n-      ).then((response) async {\r\n-        SharedPrefsController prefs = SharedPrefsController();\r\n-        await prefs.setData('user', userToJson(User.fromJson(response[1])));\r\n-        Navigator.pushReplacement(context, MaterialPageRoute(\r\n-          builder: (context) {\r\n-            return const MainPage();\r\n-          },\r\n-        ));\r\n-      }).catchError((err) async {\r\n-        final errorMessagae = json.decode(err.message)['message'].toString();\r\n-        showAlert(context,\r\n-            message: errorMessagae, color: Colors.redAccent, width: 300);\r\n-      });\r\n-    }\r\n-  }\r\n-\r\n-  @override\r\n-  Widget build(BuildContext context) {\r\n-    return Scaffold(\r\n-        backgroundColor: const Color.fromARGB(255, 234, 229, 229),\r\n-        body: GestureDetector(\r\n-          onTap: () {\r\n-            FocusScope.of(context).unfocus();\r\n-          },\r\n-          child: Stack(\r\n-            alignment: Alignment.topCenter,\r\n-            children: [\r\n-              Container(\r\n-                clipBehavior: Clip.antiAliasWithSaveLayer,\r\n-                width: 400,\r\n-                height: 400,\r\n-                decoration: BoxDecoration(\r\n-                  color: Colors.white,\r\n-                  borderRadius: BorderRadius.only(\r\n-                      bottomLeft: Radius.circular(110),\r\n-                      bottomRight: Radius.circular(200)),\r\n-                ),\r\n-                child: Image.asset(\r\n-                  'images/splash.jpg',\r\n-                  fit: BoxFit.cover,\r\n-                ),\r\n-              ),\r\n-              Container(\r\n-                margin: EdgeInsets.only(top: 220),\r\n-                width: 350,\r\n-                height: 570,\r\n-                decoration: BoxDecoration(\r\n-                    color: Colors.white,\r\n-                    borderRadius: BorderRadius.circular(80)),\r\n-                child: Padding(\r\n-                  padding: EdgeInsetsDirectional.only(\r\n-                    top: 60.0,\r\n-                    end: 60.0,\r\n-                    start: 60.0,\r\n-                  ),\r\n-                  child: Column(\r\n-                    children: [\r\n-                      ToggleSwitch(\r\n-                        fontSize: 16,\r\n-                        minWidth: 100.0,\r\n-                        cornerRadius: 20.0,\r\n-                        activeBgColors: [\r\n-                          [Colors.blue[800]!],\r\n-                          [Colors.blue[800]!]\r\n-                        ],\r\n-                        activeFgColor: Colors.white,\r\n-                        inactiveBgColor:\r\n-                            const Color.fromARGB(255, 234, 232, 232),\r\n-                        inactiveFgColor: Colors.blue[800]!,\r\n-                        initialLabelIndex: initialLabelIndex,\r\n-                        totalSwitches: 2,\r\n-                        labels: const ['Log In', 'Sign Up'],\r\n-                        radiusStyle: true,\r\n-                        onToggle: (index) {\r\n-                          setState(() {\r\n-                            isToggled = !isToggled;\r\n-                            print(isToggled);\r\n-                            initialLabelIndex = index!;\r\n-                          });\r\n-                        },\r\n-                      ),\r\n-                      SizedBox(height: 30),\r\n-                      Form(\r\n-                        key: _formKey,\r\n-                        child: Column(\r\n-                          children: [\r\n-                            TextFormField(\r\n-                              controller: nameController,\r\n-                              validator: (value) {\r\n-                                if (value == null || value.isEmpty) {\r\n-                                  return 'Please enter your name';\r\n-                                }\r\n-                                return null;\r\n-                              },\r\n-                              decoration: InputDecoration(\r\n-                                  hintText: 'Enter your name',\r\n-                                  hintStyle: TextStyle(\r\n-                                      color: Colors.grey,\r\n-                                      fontFamily: 'Iphone',\r\n-                                      fontSize: 14),\r\n-                                  fillColor: Colors.grey,\r\n-                                  enabledBorder: UnderlineInputBorder(\r\n-                                      borderSide:\r\n-                                          BorderSide(color: Colors.grey)),\r\n-                                  focusedBorder: UnderlineInputBorder(\r\n-                                      borderSide:\r\n-                                          BorderSide(color: Colors.grey))),\r\n-                            ),\r\n-                            TextFormField(\r\n-                              controller: emailOrUserNameController,\r\n-                              validator: (value) {\r\n-                                if (value == null || value.isEmpty) {\r\n-                                  return 'Please enter email or username';\r\n-                                }\r\n-                                return null;\r\n-                              },\r\n-                              decoration: InputDecoration(\r\n-                                  hintText: 'Enter email or username',\r\n-                                  hintStyle: TextStyle(\r\n-                                      color: Colors.grey,\r\n-                                      fontFamily: 'Iphone',\r\n-                                      fontSize: 14),\r\n-                                  fillColor: Colors.grey,\r\n-                                  enabledBorder: UnderlineInputBorder(\r\n-                                      borderSide:\r\n-                                          BorderSide(color: Colors.grey)),\r\n-                                  focusedBorder: UnderlineInputBorder(\r\n-                                      borderSide:\r\n-                                          BorderSide(color: Colors.grey))),\r\n-                            ),\r\n-                            SizedBox(\r\n-                              height: 15,\r\n-                            ),\r\n-                            TextFormField(\r\n-                              controller: passController,\r\n-                              obscureText: true,\r\n-                              validator: (value) {\r\n-                                if (value == null || value.isEmpty) {\r\n-                                  return ' Please enter a password  ';\r\n-                                }\r\n-                                return null;\r\n-                              },\r\n-                              decoration: InputDecoration(\r\n-                                  hintText: 'Password',\r\n-                                  hintStyle: TextStyle(\r\n-                                      color: Colors.grey,\r\n-                                      fontFamily: 'Iphone',\r\n-                                      fontSize: 14),\r\n-                                  fillColor: Colors.grey,\r\n-                                  enabledBorder: UnderlineInputBorder(\r\n-                                      borderSide:\r\n-                                          BorderSide(color: Colors.grey)),\r\n-                                  focusedBorder: UnderlineInputBorder(\r\n-                                      borderSide:\r\n-                                          BorderSide(color: Colors.grey))),\r\n-                            ),\r\n-                            SizedBox(\r\n-                              height: 15,\r\n-                            ),\r\n-                            if (isToggled)\r\n-                              Column(\r\n-                                children: [\r\n-                                  TextFormField(\r\n-                                    controller: confirmPassController,\r\n-                                    obscureText: true,\r\n-                                    validator: (value) {\r\n-                                      if (value == null || value.isEmpty) {\r\n-                                        return 'Please confirm your password';\r\n-                                      } else if (value != passController.text) {\r\n-                                        return 'Passwords do not match';\r\n-                                      }\r\n-                                      return null;\r\n-                                    },\r\n-                                    decoration: InputDecoration(\r\n-                                        hintText: 'Confirm Password',\r\n-                                        hintStyle: TextStyle(\r\n-                                            color: Colors.grey,\r\n-                                            fontFamily: 'Iphone',\r\n-                                            fontSize: 14),\r\n-                                        fillColor: Colors.grey,\r\n-                                        enabledBorder: UnderlineInputBorder(\r\n-                                            borderSide:\r\n-                                                BorderSide(color: Colors.grey)),\r\n-                                        focusedBorder: UnderlineInputBorder(\r\n-                                            borderSide: BorderSide(\r\n-                                                color: Colors.grey))),\r\n-                                  ),\r\n-                                  SizedBox(\r\n-                                    height: 25,\r\n-                                  ),\r\n-                                ],\r\n-                              ),\r\n-                            TextButton(\r\n-                              onPressed: () {\r\n-                                if (isToggled) {\r\n-                                  if (_formKey.currentState!.validate()) {\r\n-                                    submitRegister();\r\n-                                  }\r\n-                                } else {\r\n-                                  if (Form.of(context).validate()) {\r\n-                                    Navigator.push(\r\n-                                      context,\r\n-                                      MaterialPageRoute(\r\n-                                          builder: (context) =>\r\n-                                              const HomeScreen()),\r\n-                                    );\r\n-                                  }\r\n-                                }\r\n-                              },\r\n-                              style: ElevatedButton.styleFrom(\r\n-                                shape: RoundedRectangleBorder(\r\n-                                  borderRadius: BorderRadius.circular(20.0),\r\n-                                ),\r\n-                              ),\r\n-                              child: Container(\r\n-                                width: double.infinity,\r\n-                                decoration: BoxDecoration(\r\n-                                  color: primaryColor,\r\n-                                  borderRadius: BorderRadius.circular(20.0),\r\n-                                ),\r\n-                                padding: EdgeInsets.symmetric(\r\n-                                    vertical: 16.0, horizontal: 32.0),\r\n-                                child: Text(\r\n-                                  isToggled ? 'Sign Up' : 'Log In',\r\n-                                  textAlign: TextAlign.center,\r\n-                                  style: TextStyle(\r\n-                                    color: Colors.white,\r\n-                                    fontSize: 16,\r\n-                                  ),\r\n-                                ),\r\n-                              ),\r\n-                            ),\r\n-                            SizedBox(\r\n-                              height: 14,\r\n-                            ),\r\n-                            Text(\r\n-                              'OR',\r\n-                              textAlign: TextAlign.center,\r\n-                              style: TextStyle(\r\n-                                color: Colors.grey,\r\n-                                fontSize: 14,\r\n-                              ),\r\n-                            ),\r\n-                            SizedBox(height: 16),\r\n-                            Row(\r\n-                              mainAxisAlignment: MainAxisAlignment.spaceEvenly,\r\n-                              children: [\r\n-                                InkWell(\r\n-                                  onTap: () {},\r\n-                                  child: Container(\r\n-                                    padding: EdgeInsetsDirectional.symmetric(\r\n-                                      horizontal: 8,\r\n-                                      vertical: 8,\r\n-                                    ),\r\n-                                    decoration: BoxDecoration(\r\n-                                      borderRadius: BorderRadius.circular(20),\r\n-                                      border: Border.all(\r\n-                                          color: const Color.fromARGB(\r\n-                                              255, 210, 208, 208)),\r\n-                                    ),\r\n-                                    child: Logo(\r\n-                                      Logos.facebook_f,\r\n-                                      size: 24,\r\n-                                    ),\r\n-                                  ),\r\n-                                ),\r\n-                                InkWell(\r\n-                                  onTap: () {},\r\n-                                  child: Container(\r\n-                                    padding: EdgeInsets.symmetric(\r\n-                                      horizontal: 8,\r\n-                                      vertical: 8,\r\n-                                    ),\r\n-                                    decoration: BoxDecoration(\r\n-                                      borderRadius: BorderRadius.circular(20),\r\n-                                      border: Border.all(\r\n-                                          color: const Color.fromARGB(\r\n-                                              255, 210, 208, 208)),\r\n-                                    ),\r\n-                                    child: Logo(\r\n-                                      Logos.twitter,\r\n-                                      size: 24,\r\n-                                    ),\r\n-                                  ),\r\n-                                ),\r\n-                                InkWell(\r\n-                                  onTap: () {},\r\n-                                  child: Container(\r\n-                                    padding: EdgeInsets.symmetric(\r\n-                                      horizontal: 8,\r\n-                                      vertical: 8,\r\n-                                    ),\r\n-                                    decoration: BoxDecoration(\r\n-                                      borderRadius: BorderRadius.circular(20),\r\n-                                      border: Border.all(\r\n-                                          color: const Color.fromARGB(\r\n-                                              255, 210, 208, 208)),\r\n-                                    ),\r\n-                                    child: Logo(\r\n-                                      Logos.google,\r\n-                                      size: 24,\r\n-                                    ),\r\n-                                  ),\r\n-                                ),\r\n-                              ],\r\n-                            ),\r\n-                          ],\r\n-                        ),\r\n-                      ),\r\n-                    ],\r\n-                  ),\r\n-                ),\r\n-              )\r\n-            ],\r\n-          ),\r\n-        ));\r\n-  }\r\n-}\r\n"
                },
                {
                    "date": 1693737473948,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -130,8 +130,9 @@\n                         initialLabelIndex: initialLabelIndex,\r\n                         totalSwitches: 2,\r\n                         labels: const ['Log In', 'Sign Up'],\r\n                         radiusStyle: true,\r\n+                        c\r\n                         onToggle: (index) {\r\n                           setState(() {\r\n                             isToggled = !isToggled;\r\n                             print(isToggled);\r\n@@ -261,9 +262,9 @@\n                                     Navigator.push(\r\n                                       context,\r\n                                       MaterialPageRoute(\r\n                                           builder: (context) =>\r\n-                                              const MainPage()),\r\n+                                              const MainScreen()),\r\n                                     );\r\n                                   }\r\n                                 }\r\n                               },\r\n"
                },
                {
                    "date": 1693737482322,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -130,9 +130,9 @@\n                         initialLabelIndex: initialLabelIndex,\r\n                         totalSwitches: 2,\r\n                         labels: const ['Log In', 'Sign Up'],\r\n                         radiusStyle: true,\r\n-                        c\r\n+                        curve: ,\r\n                         onToggle: (index) {\r\n                           setState(() {\r\n                             isToggled = !isToggled;\r\n                             print(isToggled);\r\n"
                },
                {
                    "date": 1693737503361,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -130,9 +130,9 @@\n                         initialLabelIndex: initialLabelIndex,\r\n                         totalSwitches: 2,\r\n                         labels: const ['Log In', 'Sign Up'],\r\n                         radiusStyle: true,\r\n-                        curve: ,\r\n+                        curve: Curve.s,\r\n                         onToggle: (index) {\r\n                           setState(() {\r\n                             isToggled = !isToggled;\r\n                             print(isToggled);\r\n"
                },
                {
                    "date": 1693737510894,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -130,9 +130,9 @@\n                         initialLabelIndex: initialLabelIndex,\r\n                         totalSwitches: 2,\r\n                         labels: const ['Log In', 'Sign Up'],\r\n                         radiusStyle: true,\r\n-                        curve: Curve.s,\r\n+                        curve: Curves.linear,\r\n                         onToggle: (index) {\r\n                           setState(() {\r\n                             isToggled = !isToggled;\r\n                             print(isToggled);\r\n"
                },
                {
                    "date": 1693737534242,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -130,9 +130,9 @@\n                         initialLabelIndex: initialLabelIndex,\r\n                         totalSwitches: 2,\r\n                         labels: const ['Log In', 'Sign Up'],\r\n                         radiusStyle: true,\r\n-                        curve: Curves.linear,\r\n+                        curve: Curves.,\r\n                         onToggle: (index) {\r\n                           setState(() {\r\n                             isToggled = !isToggled;\r\n                             print(isToggled);\r\n"
                },
                {
                    "date": 1693737543994,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n             color: Colors.grey,\r\n             width: 300);\r\n         Navigator.pushReplacement(context, MaterialPageRoute(\r\n           builder: (context) {\r\n-            return LoginScreen();\r\n+            return const LoginScreen();\r\n           },\r\n         ));\r\n       }).catchError((err) async {\r\n         final errorMessagae =\r\n@@ -88,9 +88,9 @@\n               Container(\r\n                 clipBehavior: Clip.antiAliasWithSaveLayer,\r\n                 width: 400,\r\n                 height: 400,\r\n-                decoration: BoxDecoration(\r\n+                decoration: const BoxDecoration(\r\n                   color: Colors.white,\r\n                   borderRadius: BorderRadius.only(\r\n                       bottomLeft: Radius.circular(110),\r\n                       bottomRight: Radius.circular(200)),\r\n@@ -100,16 +100,16 @@\n                   fit: BoxFit.cover,\r\n                 ),\r\n               ),\r\n               Container(\r\n-                margin: EdgeInsets.only(top: 220),\r\n+                margin: const EdgeInsets.only(top: 220),\r\n                 width: 350,\r\n                 height: 570,\r\n                 decoration: BoxDecoration(\r\n                     color: Colors.white,\r\n                     borderRadius: BorderRadius.circular(80)),\r\n                 child: Padding(\r\n-                  padding: EdgeInsetsDirectional.only(\r\n+                  padding: const EdgeInsetsDirectional.only(\r\n                     top: 60.0,\r\n                     end: 60.0,\r\n                     start: 60.0,\r\n                   ),\r\n@@ -130,18 +130,18 @@\n                         initialLabelIndex: initialLabelIndex,\r\n                         totalSwitches: 2,\r\n                         labels: const ['Log In', 'Sign Up'],\r\n                         radiusStyle: true,\r\n-                        curve: Curves.,\r\n+                        curve: Curves.easeInToLinear,\r\n                         onToggle: (index) {\r\n                           setState(() {\r\n                             isToggled = !isToggled;\r\n                             print(isToggled);\r\n                             initialLabelIndex = index!;\r\n                           });\r\n                         },\r\n                       ),\r\n-                      SizedBox(height: 30),\r\n+                      const SizedBox(height: 30),\r\n                       Form(\r\n                         key: _formKey,\r\n                         child: Column(\r\n                           children: [\r\n@@ -152,9 +152,9 @@\n                                   return 'Please enter your name';\r\n                                 }\r\n                                 return null;\r\n                               },\r\n-                              decoration: InputDecoration(\r\n+                              decoration: const InputDecoration(\r\n                                   hintText: 'Enter your name',\r\n                                   hintStyle: TextStyle(\r\n                                       color: Colors.grey,\r\n                                       fontFamily: 'Iphone',\r\n@@ -174,9 +174,9 @@\n                                   return 'Please enter email or username';\r\n                                 }\r\n                                 return null;\r\n                               },\r\n-                              decoration: InputDecoration(\r\n+                              decoration: const InputDecoration(\r\n                                   hintText: 'Enter email or username',\r\n                                   hintStyle: TextStyle(\r\n                                       color: Colors.grey,\r\n                                       fontFamily: 'Iphone',\r\n@@ -188,9 +188,9 @@\n                                   focusedBorder: UnderlineInputBorder(\r\n                                       borderSide:\r\n                                           BorderSide(color: Colors.grey))),\r\n                             ),\r\n-                            SizedBox(\r\n+                            const SizedBox(\r\n                               height: 15,\r\n                             ),\r\n                             TextFormField(\r\n                               controller: passController,\r\n@@ -200,9 +200,9 @@\n                                   return ' Please enter a password  ';\r\n                                 }\r\n                                 return null;\r\n                               },\r\n-                              decoration: InputDecoration(\r\n+                              decoration: const InputDecoration(\r\n                                   hintText: 'Password',\r\n                                   hintStyle: TextStyle(\r\n                                       color: Colors.grey,\r\n                                       fontFamily: 'Iphone',\r\n@@ -214,9 +214,9 @@\n                                   focusedBorder: UnderlineInputBorder(\r\n                                       borderSide:\r\n                                           BorderSide(color: Colors.grey))),\r\n                             ),\r\n-                            SizedBox(\r\n+                            const SizedBox(\r\n                               height: 15,\r\n                             ),\r\n                             if (isToggled)\r\n                               Column(\r\n@@ -231,9 +231,9 @@\n                                         return 'Passwords do not match';\r\n                                       }\r\n                                       return null;\r\n                                     },\r\n-                                    decoration: InputDecoration(\r\n+                                    decoration: const InputDecoration(\r\n                                         hintText: 'Confirm Password',\r\n                                         hintStyle: TextStyle(\r\n                                             color: Colors.grey,\r\n                                             fontFamily: 'Iphone',\r\n@@ -245,9 +245,9 @@\n                                         focusedBorder: UnderlineInputBorder(\r\n                                             borderSide: BorderSide(\r\n                                                 color: Colors.grey))),\r\n                                   ),\r\n-                                  SizedBox(\r\n+                                  const SizedBox(\r\n                                     height: 25,\r\n                                   ),\r\n                                 ],\r\n                               ),\r\n@@ -278,39 +278,40 @@\n                                 decoration: BoxDecoration(\r\n                                   color: primaryColor,\r\n                                   borderRadius: BorderRadius.circular(20.0),\r\n                                 ),\r\n-                                padding: EdgeInsets.symmetric(\r\n+                                padding: const EdgeInsets.symmetric(\r\n                                     vertical: 16.0, horizontal: 32.0),\r\n                                 child: Text(\r\n                                   isToggled ? 'Sign Up' : 'Log In',\r\n                                   textAlign: TextAlign.center,\r\n-                                  style: TextStyle(\r\n+                                  style: const TextStyle(\r\n                                     color: Colors.white,\r\n                                     fontSize: 16,\r\n                                   ),\r\n                                 ),\r\n                               ),\r\n                             ),\r\n-                            SizedBox(\r\n+                            const SizedBox(\r\n                               height: 14,\r\n                             ),\r\n-                            Text(\r\n+                            const Text(\r\n                               'OR',\r\n                               textAlign: TextAlign.center,\r\n                               style: TextStyle(\r\n                                 color: Colors.grey,\r\n                                 fontSize: 14,\r\n                               ),\r\n                             ),\r\n-                            SizedBox(height: 16),\r\n+                            const SizedBox(height: 16),\r\n                             Row(\r\n                               mainAxisAlignment: MainAxisAlignment.spaceEvenly,\r\n                               children: [\r\n                                 InkWell(\r\n                                   onTap: () {},\r\n                                   child: Container(\r\n-                                    padding: EdgeInsetsDirectional.symmetric(\r\n+                                    padding:\r\n+                                        const EdgeInsetsDirectional.symmetric(\r\n                                       horizontal: 8,\r\n                                       vertical: 8,\r\n                                     ),\r\n                                     decoration: BoxDecoration(\r\n@@ -327,9 +328,9 @@\n                                 ),\r\n                                 InkWell(\r\n                                   onTap: () {},\r\n                                   child: Container(\r\n-                                    padding: EdgeInsets.symmetric(\r\n+                                    padding: const EdgeInsets.symmetric(\r\n                                       horizontal: 8,\r\n                                       vertical: 8,\r\n                                     ),\r\n                                     decoration: BoxDecoration(\r\n@@ -346,9 +347,9 @@\n                                 ),\r\n                                 InkWell(\r\n                                   onTap: () {},\r\n                                   child: Container(\r\n-                                    padding: EdgeInsets.symmetric(\r\n+                                    padding: const EdgeInsets.symmetric(\r\n                                       horizontal: 8,\r\n                                       vertical: 8,\r\n                                     ),\r\n                                     decoration: BoxDecoration(\r\n"
                },
                {
                    "date": 1693737568087,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,9 +102,9 @@\n               ),\r\n               Container(\r\n                 margin: const EdgeInsets.only(top: 220),\r\n                 width: 350,\r\n-                height: 570,\r\n+                height: 550,\r\n                 decoration: BoxDecoration(\r\n                     color: Colors.white,\r\n                     borderRadius: BorderRadius.circular(80)),\r\n                 child: Padding(\r\n"
                },
                {
                    "date": 1693737640143,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -130,9 +130,9 @@\n                         initialLabelIndex: initialLabelIndex,\r\n                         totalSwitches: 2,\r\n                         labels: const ['Log In', 'Sign Up'],\r\n                         radiusStyle: true,\r\n-                        curve: Curves.easeInToLinear,\r\n+                        \r\n                         onToggle: (index) {\r\n                           setState(() {\r\n                             isToggled = !isToggled;\r\n                             print(isToggled);\r\n"
                },
                {
                    "date": 1693737755361,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -130,9 +130,8 @@\n                         initialLabelIndex: initialLabelIndex,\r\n                         totalSwitches: 2,\r\n                         labels: const ['Log In', 'Sign Up'],\r\n                         radiusStyle: true,\r\n-                        \r\n                         onToggle: (index) {\r\n                           setState(() {\r\n                             isToggled = !isToggled;\r\n                             print(isToggled);\r\n@@ -144,8 +143,9 @@\n                       Form(\r\n                         key: _formKey,\r\n                         child: Column(\r\n                           children: [\r\n+                            if(is)\r\n                             TextFormField(\r\n                               controller: nameController,\r\n                               validator: (value) {\r\n                                 if (value == null || value.isEmpty) {\r\n"
                },
                {
                    "date": 1693737894640,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -143,32 +143,32 @@\n                       Form(\r\n                         key: _formKey,\r\n                         child: Column(\r\n                           children: [\r\n-                            if(is)\r\n+                            if (isToggled)\r\n+                              TextFormField(\r\n+                                controller: nameController,\r\n+                                validator: (value) {\r\n+                                  if (value == null || value.isEmpty) {\r\n+                                    return 'Please enter your name';\r\n+                                  }\r\n+                                  return null;\r\n+                                },\r\n+                                decoration: const InputDecoration(\r\n+                                    hintText: 'Enter your name',\r\n+                                    hintStyle: TextStyle(\r\n+                                        color: Colors.grey,\r\n+                                        fontFamily: 'Iphone',\r\n+                                        fontSize: 14),\r\n+                                    fillColor: Colors.grey,\r\n+                                    enabledBorder: UnderlineInputBorder(\r\n+                                        borderSide:\r\n+                                            BorderSide(color: Colors.grey)),\r\n+                                    focusedBorder: UnderlineInputBorder(\r\n+                                        borderSide:\r\n+                                            BorderSide(color: Colors.grey))),\r\n+                              ),\r\n                             TextFormField(\r\n-                              controller: nameController,\r\n-                              validator: (value) {\r\n-                                if (value == null || value.isEmpty) {\r\n-                                  return 'Please enter your name';\r\n-                                }\r\n-                                return null;\r\n-                              },\r\n-                              decoration: const InputDecoration(\r\n-                                  hintText: 'Enter your name',\r\n-                                  hintStyle: TextStyle(\r\n-                                      color: Colors.grey,\r\n-                                      fontFamily: 'Iphone',\r\n-                                      fontSize: 14),\r\n-                                  fillColor: Colors.grey,\r\n-                                  enabledBorder: UnderlineInputBorder(\r\n-                                      borderSide:\r\n-                                          BorderSide(color: Colors.grey)),\r\n-                                  focusedBorder: UnderlineInputBorder(\r\n-                                      borderSide:\r\n-                                          BorderSide(color: Colors.grey))),\r\n-                            ),\r\n-                            TextFormField(\r\n                               controller: emailOrUserNameController,\r\n                               validator: (value) {\r\n                                 if (value == null || value.isEmpty) {\r\n                                   return 'Please enter email or username';\r\n@@ -257,9 +257,9 @@\n                                   if (_formKey.currentState!.validate()) {\r\n                                     submitRegister();\r\n                                   }\r\n                                 } else {\r\n-                                  if (Form.of(context).validate()) {\r\n+                                  if (_formKey.currentState!.validate()) {\r\n                                     Navigator.push(\r\n                                       context,\r\n                                       MaterialPageRoute(\r\n                                           builder: (context) =>\r\n"
                },
                {
                    "date": 1693738022148,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -258,14 +258,9 @@\n                                     submitRegister();\r\n                                   }\r\n                                 } else {\r\n                                   if (_formKey.currentState!.validate()) {\r\n-                                    Navigator.push(\r\n-                                      context,\r\n-                                      MaterialPageRoute(\r\n-                                          builder: (context) =>\r\n-                                              const MainScreen()),\r\n-                                    );\r\n+                                   submitLogin\r\n                                   }\r\n                                 }\r\n                               },\r\n                               style: ElevatedButton.styleFrom(\r\n"
                }
            ],
            "date": 1693736545547,
            "name": "Commit-0",
            "content": "import 'dart:convert';\r\n\r\nimport 'package:final_projectt/Screens/main_screen.dart';\r\nimport 'package:final_projectt/core/helpers/shared_prefs.dart';\r\nimport 'package:final_projectt/core/services/auth_controller.dart';\r\nimport 'package:final_projectt/core/util/constants/colors.dart';\r\nimport 'package:final_projectt/core/widgets/show_alert.dart';\r\nimport 'package:final_projectt/models/user_model.dart';\r\nimport 'package:flutter/material.dart';\r\nimport 'package:icons_plus/icons_plus.dart';\r\nimport 'package:toggle_switch/toggle_switch.dart';\r\n\r\nclass LoginScreen extends StatefulWidget {\r\n  const LoginScreen({super.key});\r\n\r\n  @override\r\n  State<LoginScreen> createState() => _LoginScreenState();\r\n}\r\n\r\nclass _LoginScreenState extends State<LoginScreen> {\r\n  bool isToggled = false;\r\n  int initialLabelIndex = 0;\r\n  final _formKey = GlobalKey<FormState>();\r\n  TextEditingController nameController = TextEditingController();\r\n  TextEditingController emailOrUserNameController = TextEditingController();\r\n  TextEditingController passController = TextEditingController();\r\n  TextEditingController confirmPassController = TextEditingController();\r\n\r\n  void submitRegister() {\r\n    if (_formKey.currentState!.validate()) {\r\n      AuthController.register(context,\r\n              name: nameController.text,\r\n              email: emailOrUserNameController.text,\r\n              password: passController.text,\r\n              passwordConfirmation: confirmPassController.text)\r\n          .then((response) async {\r\n        // if (response[0] == 200) {\r\n        SharedPrefsController _prefs = SharedPrefsController();\r\n        await _prefs.setData('user', userToJson(User.fromJson(response[1])));\r\n        Navigator.pushReplacement(context, MaterialPageRoute(\r\n          builder: (context) {\r\n            return HomeScreen();\r\n          },\r\n        ));\r\n      }).catchError((err) async {\r\n        final errorMessagae = json.decode(err.message)['message'].toString();\r\n        showAlert(context,\r\n            message: errorMessagae, color: Colors.redAccent, width: 300);\r\n      });\r\n    }\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n        backgroundColor: const Color.fromARGB(255, 234, 229, 229),\r\n        body: GestureDetector(\r\n          onTap: () {\r\n            FocusScope.of(context).unfocus();\r\n          },\r\n          child: Stack(\r\n            alignment: Alignment.topCenter,\r\n            children: [\r\n              Container(\r\n                clipBehavior: Clip.antiAliasWithSaveLayer,\r\n                width: 400,\r\n                height: 400,\r\n                decoration: BoxDecoration(\r\n                  color: Colors.white,\r\n                  borderRadius: BorderRadius.only(\r\n                      bottomLeft: Radius.circular(110),\r\n                      bottomRight: Radius.circular(200)),\r\n                ),\r\n                child: Image.asset(\r\n                  'images/splash.jpg',\r\n                  fit: BoxFit.cover,\r\n                ),\r\n              ),\r\n              Container(\r\n                margin: EdgeInsets.only(top: 220),\r\n                width: 350,\r\n                height: 570,\r\n                decoration: BoxDecoration(\r\n                    color: Colors.white,\r\n                    borderRadius: BorderRadius.circular(80)),\r\n                child: Padding(\r\n                  padding: EdgeInsetsDirectional.only(\r\n                    top: 60.0,\r\n                    end: 60.0,\r\n                    start: 60.0,\r\n                  ),\r\n                  child: Column(\r\n                    children: [\r\n                      ToggleSwitch(\r\n                        fontSize: 16,\r\n                        minWidth: 100.0,\r\n                        cornerRadius: 20.0,\r\n                        activeBgColors: [\r\n                          [Colors.blue[800]!],\r\n                          [Colors.blue[800]!]\r\n                        ],\r\n                        activeFgColor: Colors.white,\r\n                        inactiveBgColor:\r\n                            const Color.fromARGB(255, 234, 232, 232),\r\n                        inactiveFgColor: Colors.blue[800]!,\r\n                        initialLabelIndex: initialLabelIndex,\r\n                        totalSwitches: 2,\r\n                        labels: const ['Log In', 'Sign Up'],\r\n                        radiusStyle: true,\r\n                        onToggle: (index) {\r\n                          setState(() {\r\n                            isToggled = !isToggled;\r\n                            print(isToggled);\r\n                            initialLabelIndex = index!;\r\n                          });\r\n                        },\r\n                      ),\r\n                      SizedBox(height: 30),\r\n                      Form(\r\n                        key: _formKey,\r\n                        child: Column(\r\n                          children: [\r\n                            TextFormField(\r\n                              controller: nameController,\r\n                              validator: (value) {\r\n                                if (value == null || value.isEmpty) {\r\n                                  return 'Please enter your name';\r\n                                }\r\n                                return null;\r\n                              },\r\n                              decoration: InputDecoration(\r\n                                  hintText: 'Enter your name',\r\n                                  hintStyle: TextStyle(\r\n                                      color: Colors.grey,\r\n                                      fontFamily: 'Iphone',\r\n                                      fontSize: 14),\r\n                                  fillColor: Colors.grey,\r\n                                  enabledBorder: UnderlineInputBorder(\r\n                                      borderSide:\r\n                                          BorderSide(color: Colors.grey)),\r\n                                  focusedBorder: UnderlineInputBorder(\r\n                                      borderSide:\r\n                                          BorderSide(color: Colors.grey))),\r\n                            ),\r\n                            TextFormField(\r\n                              controller: emailOrUserNameController,\r\n                              validator: (value) {\r\n                                if (value == null || value.isEmpty) {\r\n                                  return 'Please enter email or username';\r\n                                }\r\n                                return null;\r\n                              },\r\n                              decoration: InputDecoration(\r\n                                  hintText: 'Enter email or username',\r\n                                  hintStyle: TextStyle(\r\n                                      color: Colors.grey,\r\n                                      fontFamily: 'Iphone',\r\n                                      fontSize: 14),\r\n                                  fillColor: Colors.grey,\r\n                                  enabledBorder: UnderlineInputBorder(\r\n                                      borderSide:\r\n                                          BorderSide(color: Colors.grey)),\r\n                                  focusedBorder: UnderlineInputBorder(\r\n                                      borderSide:\r\n                                          BorderSide(color: Colors.grey))),\r\n                            ),\r\n                            SizedBox(\r\n                              height: 15,\r\n                            ),\r\n                            TextFormField(\r\n                              controller: passController,\r\n                              obscureText: true,\r\n                              validator: (value) {\r\n                                if (value == null || value.isEmpty) {\r\n                                  return ' Please enter a password  ';\r\n                                }\r\n                                return null;\r\n                              },\r\n                              decoration: InputDecoration(\r\n                                  hintText: 'Password',\r\n                                  hintStyle: TextStyle(\r\n                                      color: Colors.grey,\r\n                                      fontFamily: 'Iphone',\r\n                                      fontSize: 14),\r\n                                  fillColor: Colors.grey,\r\n                                  enabledBorder: UnderlineInputBorder(\r\n                                      borderSide:\r\n                                          BorderSide(color: Colors.grey)),\r\n                                  focusedBorder: UnderlineInputBorder(\r\n                                      borderSide:\r\n                                          BorderSide(color: Colors.grey))),\r\n                            ),\r\n                            SizedBox(\r\n                              height: 15,\r\n                            ),\r\n                            if (isToggled)\r\n                              Column(\r\n                                children: [\r\n                                  TextFormField(\r\n                                    controller: confirmPassController,\r\n                                    obscureText: true,\r\n                                    validator: (value) {\r\n                                      if (value == null || value.isEmpty) {\r\n                                        return 'Please confirm your password';\r\n                                      } else if (value != passController.text) {\r\n                                        return 'Passwords do not match';\r\n                                      }\r\n                                      return null;\r\n                                    },\r\n                                    decoration: InputDecoration(\r\n                                        hintText: 'Confirm Password',\r\n                                        hintStyle: TextStyle(\r\n                                            color: Colors.grey,\r\n                                            fontFamily: 'Iphone',\r\n                                            fontSize: 14),\r\n                                        fillColor: Colors.grey,\r\n                                        enabledBorder: UnderlineInputBorder(\r\n                                            borderSide:\r\n                                                BorderSide(color: Colors.grey)),\r\n                                        focusedBorder: UnderlineInputBorder(\r\n                                            borderSide: BorderSide(\r\n                                                color: Colors.grey))),\r\n                                  ),\r\n                                  SizedBox(\r\n                                    height: 25,\r\n                                  ),\r\n                                ],\r\n                              ),\r\n                            TextButton(\r\n                              onPressed: () {\r\n                                if (isToggled) {\r\n                                  if (_formKey.currentState!.validate()) {\r\n                                    submitRegister();\r\n                                  }\r\n                                } else {\r\n                                  if (Form.of(context).validate()) {\r\n                                    Navigator.push(\r\n                                      context,\r\n                                      MaterialPageRoute(\r\n                                          builder: (context) =>\r\n                                              const HomeScreen()),\r\n                                    );\r\n                                  }\r\n                                }\r\n                              },\r\n                              style: ElevatedButton.styleFrom(\r\n                                shape: RoundedRectangleBorder(\r\n                                  borderRadius: BorderRadius.circular(20.0),\r\n                                ),\r\n                              ),\r\n                              child: Container(\r\n                                width: double.infinity,\r\n                                decoration: BoxDecoration(\r\n                                  color: primaryColor,\r\n                                  borderRadius: BorderRadius.circular(20.0),\r\n                                ),\r\n                                padding: EdgeInsets.symmetric(\r\n                                    vertical: 16.0, horizontal: 32.0),\r\n                                child: Text(\r\n                                  isToggled ? 'Sign Up' : 'Log In',\r\n                                  textAlign: TextAlign.center,\r\n                                  style: TextStyle(\r\n                                    color: Colors.white,\r\n                                    fontSize: 16,\r\n                                  ),\r\n                                ),\r\n                              ),\r\n                            ),\r\n                            SizedBox(\r\n                              height: 14,\r\n                            ),\r\n                            Text(\r\n                              'OR',\r\n                              textAlign: TextAlign.center,\r\n                              style: TextStyle(\r\n                                color: Colors.grey,\r\n                                fontSize: 14,\r\n                              ),\r\n                            ),\r\n                            SizedBox(height: 16),\r\n                            Row(\r\n                              mainAxisAlignment: MainAxisAlignment.spaceEvenly,\r\n                              children: [\r\n                                InkWell(\r\n                                  onTap: () {},\r\n                                  child: Container(\r\n                                    padding: EdgeInsetsDirectional.symmetric(\r\n                                      horizontal: 8,\r\n                                      vertical: 8,\r\n                                    ),\r\n                                    decoration: BoxDecoration(\r\n                                      borderRadius: BorderRadius.circular(20),\r\n                                      border: Border.all(\r\n                                          color: const Color.fromARGB(\r\n                                              255, 210, 208, 208)),\r\n                                    ),\r\n                                    child: Logo(\r\n                                      Logos.facebook_f,\r\n                                      size: 24,\r\n                                    ),\r\n                                  ),\r\n                                ),\r\n                                InkWell(\r\n                                  onTap: () {},\r\n                                  child: Container(\r\n                                    padding: EdgeInsets.symmetric(\r\n                                      horizontal: 8,\r\n                                      vertical: 8,\r\n                                    ),\r\n                                    decoration: BoxDecoration(\r\n                                      borderRadius: BorderRadius.circular(20),\r\n                                      border: Border.all(\r\n                                          color: const Color.fromARGB(\r\n                                              255, 210, 208, 208)),\r\n                                    ),\r\n                                    child: Logo(\r\n                                      Logos.twitter,\r\n                                      size: 24,\r\n                                    ),\r\n                                  ),\r\n                                ),\r\n                                InkWell(\r\n                                  onTap: () {},\r\n                                  child: Container(\r\n                                    padding: EdgeInsets.symmetric(\r\n                                      horizontal: 8,\r\n                                      vertical: 8,\r\n                                    ),\r\n                                    decoration: BoxDecoration(\r\n                                      borderRadius: BorderRadius.circular(20),\r\n                                      border: Border.all(\r\n                                          color: const Color.fromARGB(\r\n                                              255, 210, 208, 208)),\r\n                                    ),\r\n                                    child: Logo(\r\n                                      Logos.google,\r\n                                      size: 24,\r\n                                    ),\r\n                                  ),\r\n                                ),\r\n                              ],\r\n                            ),\r\n                          ],\r\n                        ),\r\n                      ),\r\n                    ],\r\n                  ),\r\n                ),\r\n              )\r\n            ],\r\n          ),\r\n        ));\r\n  }\r\n}\r\n"
        }
    ]
}